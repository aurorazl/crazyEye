# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2018-08-23 16:29
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('web', '0003_task_tasklogdetail'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'verbose_name_plural': '部门',
                'verbose_name': '部门',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(default='n/a', max_length=128)),
                ('closed', models.BooleanField(default=False)),
                ('cmd_count', models.IntegerField(default=0)),
                ('stay_time', models.IntegerField(default=0, help_text='每次刷新自动计算停留时间', verbose_name='停留时长(seconds)')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': '审计日志',
                'verbose_name': '审计日志',
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=64)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('expire', models.IntegerField(default=300)),
            ],
        ),
        migrations.AlterModelOptions(
            name='auditlog',
            options={'verbose_name': '审计日志old', 'verbose_name_plural': '审计日志old'},
        ),
        migrations.AlterModelOptions(
            name='host',
            options={'verbose_name': '主机', 'verbose_name_plural': '主机'},
        ),
        migrations.AlterModelOptions(
            name='hostgroup',
            options={'verbose_name': '主机组', 'verbose_name_plural': '主机组'},
        ),
        migrations.AlterModelOptions(
            name='hosttoremoteuser',
            options={'verbose_name': '主机与远程用户绑定', 'verbose_name_plural': '主机远程与用户绑定'},
        ),
        migrations.AlterModelOptions(
            name='idc',
            options={'verbose_name': 'IDC', 'verbose_name_plural': 'IDC'},
        ),
        migrations.AlterModelOptions(
            name='remoteuser',
            options={'verbose_name': '远程用户', 'verbose_name_plural': '远程用户'},
        ),
        migrations.AlterModelOptions(
            name='task',
            options={'verbose_name': '批量任务', 'verbose_name_plural': '批量任务'},
        ),
        migrations.AlterModelOptions(
            name='tasklogdetail',
            options={'verbose_name': '批量任务日志', 'verbose_name_plural': '批量任务日志'},
        ),
        migrations.AlterModelOptions(
            name='userprofile',
            options={'permissions': (('web_access_dashboard', '可以访问 审计主页'), ('web_batch_cmd_exec', '可以访问 批量命令执行页面'), ('web_batch_batch_file_transfer', '可以访问 批量文件分发页面'), ('web_config_center', '可以访问 堡垒机配置中心'), ('web_config_items', '可以访问 堡垒机各配置列表'), ('web_invoke_admin_action', '可以进行admin action执行动作'), ('web_table_change_page', '可以访问 堡垒机各配置项修改页'), ('web_table_change', '可以修改 堡垒机各配置项')), 'verbose_name': 'CrazyEye账户', 'verbose_name_plural': 'CrazyEye账户'},
        ),
        migrations.RenameField(
            model_name='task',
            old_name='date',
            new_name='start_time',
        ),
        migrations.AddField(
            model_name='auditlog',
            name='memo',
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AddField(
            model_name='host',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='host',
            name='memo',
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AddField(
            model_name='host',
            name='system_type',
            field=models.CharField(choices=[('windows', 'Windows'), ('linux', 'Linux/Unix')], default='linux', max_length=32),
        ),
        migrations.AddField(
            model_name='hostgroup',
            name='memo',
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AddField(
            model_name='remoteuser',
            name='memo',
            field=models.CharField(blank=True, max_length=128, null=True),
        ),
        migrations.AddField(
            model_name='task',
            name='end_time',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='task',
            name='expire_time',
            field=models.IntegerField(default=30),
        ),
        migrations.AddField(
            model_name='task',
            name='hosts',
            field=models.ManyToManyField(to='web.HostToRemoteUser'),
        ),
        migrations.AddField(
            model_name='task',
            name='note',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='task',
            name='task_pid',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='tasklogdetail',
            name='note',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='date_joined',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='memo',
            field=models.TextField(blank=True, default=None, null=True, verbose_name='备注'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='valid_begin_time',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='yyyy-mm-dd HH:MM:SS'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='valid_end_time',
            field=models.DateTimeField(blank=True, help_text='yyyy-mm-dd HH:MM:SS', null=True),
        ),
        migrations.AlterField(
            model_name='auditlog',
            name='log_type',
            field=models.SmallIntegerField(choices=[(0, 'CMD'), (1, 'Login'), (2, 'Logout'), (3, 'GetFile'), (4, 'SendFile'), (5, 'exception')], default=0),
        ),
        migrations.AlterField(
            model_name='remoteuser',
            name='auth_type',
            field=models.SmallIntegerField(choices=[(0, 'ssh-password'), (1, 'ssh-key')], default=0, help_text='如果选择SSH/KEY，请确保你的私钥文件已在settings.py中指定'),
        ),
        migrations.AlterField(
            model_name='remoteuser',
            name='password',
            field=models.CharField(blank=True, help_text='如果auth_method选择的是SSH/KEY,那此处不需要填写..', max_length=64, null=True),
        ),
        migrations.AlterUniqueTogether(
            name='remoteuser',
            unique_together=set([('auth_type', 'password', 'username')]),
        ),
        migrations.AddField(
            model_name='token',
            name='host',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.HostToRemoteUser'),
        ),
        migrations.AddField(
            model_name='token',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='session',
            name='bind_host',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.HostToRemoteUser'),
        ),
        migrations.AddField(
            model_name='session',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.Department', verbose_name='部门'),
        ),
    ]
